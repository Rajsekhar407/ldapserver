---
- name: Starting Process to Install Openldap Server
  hosts: localhost
  connection: local
  gather_facts: false
  
#- name: Starting Process to Install Openldap Server
#- hosts: node
#  remote_user: centos
#  become_method : sudo
#  become: yes
#  gather_facts: yes
  tasks:
    - name: Install the openldap and required Packages for Centos
      yum: name=openldap state=installed
      with_items: openldap_server_pkgs

    - name: Install the openldap and required Packages for Centos
      yum: name=compat-openldap state=installed
      with_items: openldap_server_pkgs

    - name: Install the openldap and required Packages for Centos
      yum: name=openldap-clients state=installed
      with_items: openldap_server_pkgs

    - name: Install the openldap and required Packages for Centos
      yum: name=openldap-servers state=installed
      with_items: openldap_server_pkgs

    - name: Install the openldap and required Packages for Centos
      yum: name=openldap-servers-sql state=installed
      with_items: openldap_server_pkgs

    - name: Install the openldap and required Packages for Centos
      yum: name=openldap-devel state=installed
      with_items: openldap_server_pkgs

    - name: Run slapd Service
      shell: systemctl start slapd.service systemctl enable slapd.service

    - name: Generate the root password for ldap
      shell: slappasswd -s | passwd=abc123
      register: root_password

#    - name: Copy the slapd.conf configuration file for Redhat
#      template: src=slapd.conf.j2 dest={{ openldap_server_app_path }}/slapd.conf

#    - name: Copy the ldap.conf configuration file
#      template: src=ldap.conf.j2 dest={{ openldap_server_app_path }}/ldap.conf

#    - name: Create the directory for ldap database
#      file: path=/var/lib/ldap/{{ openldap }}/ state=directory owner={{ root }} group={{ root }}

#    - name: Create the directory for ldap certificates
#      file: path={{ openldap_server_app_path }}/certs/ state=directory owner={{ root }} group={{ root }}

#    - name: Generate the private key for certificate request
#      shell: openssl genrsa -des3 -passout pass:password -out my1.key 1024 chdir={{ openldap_server_app_path }}/certs/ 
#             creates={{ openldap_server_app_path }}/certs/my1.key

#    - name: Strip the passphrase from the key 
#      shell: openssl rsa -in my1.key -passin pass:password -out my.key chdir={{ openldap_server_app_path }}/certs/ 
#             creates={{ openldap_server_app_path }}/certs/my.key

#    - name: Create and sign the the new certificate 
#      shell: openssl req -new -x509 -subj '/C={{ openldap_server_country }}/ST={{ openldap_server_state }}/L={{ openldap_server_location }}/O={{ openldap_server_organization }}/CN={{ ansible_hostname }}/' -days 365 -key my.key -out cert.crt -extensions v3_ca chdir={{ openldap_server_app_path }}/certs/   creates={{ openldap_server_app_path }}/certs/cert.crt

#    - name: copy the supporting files
#      copy: src=ldap dest=/etc/sysconfig/ldap mode=0755
#      when: openldap_server_enable_ssl and ansible_distribution == 'Centos'

    - name: start the slapd service
      service: name=slapd state=started enabled=yes 
  
#    - name: Copy the template for creating base dn
#      template: src={{ openldap_server_ldif }} dest=/tmp/
#      register: result

#    - name: add the base domain
#      shell: ldapadd -x -D "cn=Manager,dc={{ openldap_server_domain_name.split('.')[0] }},dc={{ openldap_server_domain_name.split('.')[1] }}" -w {{ openldap_server_rootpw }} -f {{ result.dest|default(result.path) }} && touch {{ home/centos/openldap }}/rootdn_created creates={{ home/centos/openldap }}/rootdn_created 

